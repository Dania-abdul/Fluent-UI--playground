{"version":3,"sources":["Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["imageProps","imageFit","ImageFit","cover","height","onLoad","ev","console","log","sectionStackTokens","childrenGap","cardTokens","padding","main","className","dir","href","Icon","iconName","SearchBox","placeholder","underlined","styles","root","borderBottom","boxSizing","overflowY","Nav","onLinkClick","item","name","alert","selectedKey","ariaLabel","background","border","groups","links","url","expandAriaLabel","collapseAriaLabel","key","target","disabled","isExpanded","icon","Card","aria-label","tokens","Stack","Item","Text","horizontal","DefaultButton","text","PrimaryButton","backgroundColor","fill","Image","src","alt","initializeIcons","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5700dfab.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n// import {ActionButton, IButtonStyles, Image, Persona, Stack} from 'office-ui-fabric-react';\nimport {  DefaultButton, PrimaryButton, IButtonStyles, Text, ITextStyles, IStackTokens, Persona } from 'office-ui-fabric-react';\nimport { Image, IImageProps, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Icon, IIconProps, IIconStyles } from '@fluentui/react/lib/Icon';\nimport { Pivot, PivotItem, PivotLinkFormat } from 'office-ui-fabric-react/lib/Pivot';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { Nav, INavLink, INavStyles, INavLinkGroup } from 'office-ui-fabric-react/lib/Nav';\nimport { SearchBox, ISearchBoxStyles } from 'office-ui-fabric-react/lib/SearchBox';\nimport { Card, ICardTokens, ICardSectionStyles, ICardSectionTokens } from '@uifabric/react-cards';\n\n\n\nconst navStyles: Partial<INavStyles> = {\n  root: {\n    background: 'white',\n    height: '100%',\n    boxSizing: 'border-box',\n    border: '1px solid #eee',\n    borderBottom: 'none',\n    overflowY: 'auto',\n  },\n};\n\n\nconst iconStyles: Partial<IIconStyles> = {\n  root: {\n    background: 'white',\n    height: '100%',\n    boxSizing: 'border-box',\n    border: '1px solid #eee',\n    borderBottom: 'none',\n    overflowY: 'auto',\n  },\n};\n\nconst buttonStyle: Partial<IButtonStyles> = {\n  root: {\n    backgroundColor: 'black',\n\n  },\n};\n\nconst searchStyles: Partial<ISearchBoxStyles> = {\n  root: {\n    borderBottom:'none',\n    boxSizing: 'border-box',\n    overflowY: 'auto',\n  },\n};\n\n\n\nconst imageProps: IImageProps = {\n  imageFit: ImageFit.cover,\n  height: '100%',\n  onLoad: ev => console.log('image loaded', ev),\n};\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    links: [\n      {\n        name: 'Home',\n        url: 'http://example.com',\n        expandAriaLabel: 'Expand menu section',\n        collapseAriaLabel: 'Collapse menu section',\n        links: [\n          {\n            name: 'About',\n            url: 'http://msn.com',\n            key: 'key1',\n            target: '_blank',\n          },\n          {\n            name: 'Contacts',\n            url: 'http://msn.com',\n            disabled: false,\n            key: 'key2',\n            target: '_blank',\n          },\n        ],\n        isExpanded: true,\n      },\n      {\n        name: 'Components',\n        url: 'http://example.com',\n        expandAriaLabel: 'Expand menu section',\n        collapseAriaLabel: 'Collapse menu section',\n        links: [\n          {\n            name: 'Object 1',\n            url: 'http://msn.com',\n            key: 'key1',\n            target: '_blank',\n          },\n          {\n            name: 'Object 2',\n            url: 'http://msn.com',\n            disabled: false,\n            key: 'key2',\n            target: '_blank',\n          },\n        ],\n        isExpanded: true,\n      },\n      {\n        name: 'News',\n        url: 'http://cnn.com',\n        icon: 'News',\n        key: 'key7',\n        target: '_blank',\n      },\n    ],\n  },\n];\n\nfunction _onLinkClick(ev?: React.MouseEvent<HTMLElement>, item?: INavLink) {\n  if (item && item.name === 'News') {\n    alert('News link clicked');\n  }\n}\n\n\nconst sectionStackTokens: IStackTokens = { childrenGap: 30 };\nconst cardTokens: IStackTokens = { padding: 24, childrenGap: 24 };\n\n\nexport let main = <div className=\"main\">\n  \n  <header className=\"main__header\" dir=\"ltr\">\n    <div className=\"ms-Grid-row nav-bar\">\n      <div className=\"ms-Grid-col ms-sm8  nav-bar__item\">\n        <a href=\"\" className=\"nav-bar__logo\">\n          <Icon iconName=\"WebAppBuilderFragment\" className=\"ms-IconExample\" />\n        </a>\n      </div>\n      <div className=\"ms-Grid-col ms-sm4 nav-bar__item--nav\">\n        <a href=\"\" className=\"nav-bar-link\">its a link</a>\n      </div>\n    </div>\n  </header>\n  <body className=\"main__body\">\n  <div className=\"wrap--main \" dir=\"ltr\">\n    <div className=\"main-menu \"> \n      <SearchBox placeholder=\"Search\" underlined={true} styles={searchStyles}/>\n      <Nav\n        onLinkClick={_onLinkClick}\n        selectedKey=\"key3\"\n        ariaLabel=\"Nav \"\n        styles={navStyles}\n        groups={navLinkGroups}/>\n    </div>\n\n    <div className=\"main-content\" >\n      <div className=\"content-header\">\n        <h1 className=\"title--l\">hello world</h1>\n      </div>\n      <div className=\"content-body\">\n          <h2 className=\"title--m\">Call to action</h2>\n          <div className=\"content__data\">\n            <Card aria-label=\"Basic card\" className=\"card card__cta\"  tokens={cardTokens}>\n              <Stack tokens={sectionStackTokens}>\n                <Card.Item>\n                  <Text className=\"ms-fontSize-18 ms-fontWeight-semibold\">Basic vertical card</Text>\n                  </Card.Item>\n                  <Card.Item>\n                  <Text>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut</Text>\n                </Card.Item>\n              </Stack>\n              <Stack horizontal tokens={sectionStackTokens}>\n                <DefaultButton text=\"Standard\" />\n                <PrimaryButton text=\"Primary\" styles={buttonStyle}/>\n              </Stack>\n            </Card>\n          </div>\n          <h2 className=\"title--m\">Image Text horizontal</h2>\n          <div className=\"content__data\">\n            <Card aria-label=\"Basic horizontal card \" className=\"card card__image-text\"  >\n              <Card.Item fill>\n                <Image  \n                 {...imageProps} \n                 src=\"https://placehold.it/180x135\" \n                 alt=\"Placeholder image.\" />\n              </Card.Item>\n\n              <Card.Item>\n                <Stack tokens={cardTokens}>\n                  <Card.Item>\n                    <Text className=\"ms-fontSize-18 ms-fontWeight-semibold\">Basic vertical card</Text>\n                    </Card.Item>\n                    <Card.Item>\n                    <Text>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut</Text>\n                  </Card.Item>\n                </Stack>            \n              </Card.Item>\n            </Card>\n          </div>\n      </div>\n    </div>\n  </div>\n  </body>\n</div>\n","import './App.css';\nimport { main } from './Main';\nimport './assets/stylesheets/style.scss';\nimport './assets/fabric-core-css/Fabric.scss';\n\nimport React from \"react\"\n\nimport { initializeIcons } from '@uifabric/icons';\ninitializeIcons();\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n        {main}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}